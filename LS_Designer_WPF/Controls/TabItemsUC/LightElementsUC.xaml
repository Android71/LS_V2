<UserControl x:Class="LS_Designer_WPF.Controls.LightElementsUC"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:LS_Designer_WPF.Controls"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:Custom="http://www.galasoft.ch/mvvmlight"
             xmlns:model="clr-namespace:LS_Designer_WPF.Model"
             d:DesignHeight="300"
             mc:Ignorable="d">
    <UserControl.Resources>
        <DataTemplate x:Key="MasterTemplate">
            <!--<StackPanel Orientation="Horizontal">
                <CheckBox Name="checkBox" Margin="0,0,5,0" VerticalAlignment="Bottom"
                          IsChecked="{Binding IsLinked}"
                          Visibility="{Binding IsMappingMode,
                                               Converter={StaticResource CollapsedIfFalse}}"
                          IsEnabled="False" />
                <TextBlock Text="{Binding Name}" />
            </StackPanel>-->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <CheckBox Name="mapper" Grid.Column="0" VerticalAlignment="Center"
                          IsChecked="{Binding IsLinked}"
                          IsEnabled="{Binding ChangeLinkEnable}"
                          Visibility="Hidden" />
                <Border Name="isLinked" Grid.Column="0" Height="13"
                        VerticalAlignment="Center" Visibility="Hidden"
                        BorderBrush="{DynamicResource BlueAccentBrush}"
                        Background="{DynamicResource BlueAccentBrush}" />
                <!--
                    Visibility="{Binding IsLinked,
                    Converter={StaticResource HiddenIfFalse}}"
                -->
                <Border Name="directChild" Grid.Column="0" Height="13"
                        VerticalAlignment="Center" Visibility="Hidden"
                        BorderBrush="{StaticResource OrangeAccentBrush}"
                        Background="{StaticResource OrangeAccentBrush}" />
                <!--
                    Visibility="{Binding DirectChild,
                    Converter={StaticResource HiddenIfFalse}}"
                -->
                <TextBlock Grid.Column="1" Margin="10,0,0,0"
                           Text="{Binding Name}" />
            </Grid>
            <DataTemplate.Triggers>
                <!--<Trigger SourceName="text" Property="IsMouseOver" Value="True">
                                        <Setter TargetName="text" Property="Background" Value="GreenYellow" />
                                    </Trigger>-->

                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
                    <Setter TargetName="mapper" Property="Visibility" Value="Visible" />
                    <Setter TargetName="isLinked" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="directChild" Property="Visibility" Value="Hidden" />
                </DataTrigger>

                <!--<MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True" />
                        <Condition Binding="{Binding CanChangeLink}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="mapper" Property="Visibility" Value="Visible" />
                    <Setter TargetName="isLinked" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="directChild" Property="Visibility" Value="Hidden" />
                </MultiDataTrigger>-->

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="False" />
                        <Condition Binding="{Binding IsLinked}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="mapper" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="isLinked" Property="Visibility" Value="Visible" />
                    <Setter TargetName="directChild" Property="Visibility" Value="Hidden" />
                </MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="False" />
                        <Condition Binding="{Binding DirectChild}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="mapper" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="isLinked" Property="Visibility" Value="Hidden" />
                    <Setter TargetName="directChild" Property="Visibility" Value="Visible" />
                </MultiDataTrigger>

            </DataTemplate.Triggers>
        </DataTemplate>
        
        <DataTemplate x:Key="DetailTemplate">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Border Name="hasChildren" Grid.Column="0" Height="13" Width="13"
                        VerticalAlignment="Center" Visibility="Hidden"
                        BorderBrush="{DynamicResource BlueAccentBrush}"
                        Background="{DynamicResource BlueAccentBrush}" />
                
                <Border Name="directParent" Grid.Column="0" Height="13"
                        VerticalAlignment="Center" Visibility="Hidden"
                        BorderBrush="{StaticResource OrangeAccentBrush}"
                        Background="{StaticResource OrangeAccentBrush}" />
                
                <TextBlock Grid.Column="1" Margin="10,0,0,0"
                           Text="{Binding Name}" />
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding HasChildren}" Value="True">
                                        <Setter TargetName="hasChildren" Property="Visibility" Value="Visible" />
                </DataTrigger>
                <DataTrigger Binding="{Binding DirectParent}" Value="True">
                                        <Setter TargetName="directParent" Property="Visibility" Value="Visible" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

    </UserControl.Resources>
    <Grid Name="layoutRoot">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="220" />
            <ColumnDefinition Width="60" />
            <ColumnDefinition Width="200" />
        </Grid.ColumnDefinitions>
        <Grid x:Name="masterLayout">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid x:Name="masterList" Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <DockPanel x:Name="masterListButtons" Grid.Row="0" Margin="0,0,0,10"
                           Background="{StaticResource DarkBrush}"
                           Visibility="{Binding MasterListButtonsVisibility}">
                    <Button x:Name="masterRemoveButton" Margin="1" HorizontalAlignment="Left"
                            Command="{Binding MasterRemoveCmd}"
                            Content="Remove" DockPanel.Dock="Left" Padding="3,1"
                            Style="{StaticResource ButtonStyle1}" />
                    <Button x:Name="masterAddButton" Margin="1" HorizontalAlignment="Right"
                            Background="DimGray"
                            Command="{Binding MasterAddCmd}"
                            Content="Add" DockPanel.Dock="Right" Padding="3,1"
                            Style="{StaticResource ButtonStyle1}" />
                    <Button x:Name="testButton" Margin="1,1,10,1" HorizontalAlignment="Right"
                            Background="DimGray"
                            Command="{Binding MasterTestCmd}"
                            Content="Test" DockPanel.Dock="Right" Padding="3,1"
                            Style="{StaticResource ButtonStyle1}" />
                </DockPanel>
                <Grid Name="lisLayout" Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <ListBox Name="internalList" Grid.RowSpan="2"
                             ItemContainerStyle="{StaticResource ListBoxItemStyle1}"
                             ItemsSource="{Binding MasterList}"
                             SelectedItem="{Binding MasterSelectedItem}"
                             Style="{StaticResource ListBoxStyle1}"
                             ItemTemplate="{StaticResource MasterTemplate}"
                             Visibility="{Binding MasterListVisibility}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <Custom:EventToCommand Command="{Binding MasterEditCmd}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <!--<ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox Name="checkBox" Margin="0,0,5,0" VerticalAlignment="Bottom"
                                              IsChecked="{Binding IsLinked}"
                                              Visibility="{Binding IsMappingMode,
                                                                   Converter={StaticResource CollapsedIfFalse}}"
                                              IsEnabled="False" />
                                    <TextBlock Text="{Binding Name}" />
                                </StackPanel>
                                <DataTemplate.Triggers>
                        -->
                        <!--<Trigger SourceName="text" Property="IsMouseOver" Value="True">
                                        <Setter TargetName="text" Property="Background" Value="GreenYellow" />
                                    </Trigger>-->

                        <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
                                        <Setter TargetName="checkBox" Property="IsEnabled" Value="True" />
                                    </DataTrigger>-->
                        <!--

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True" />
                                            <Condition Binding="{Binding CanLink}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="checkBox" Property="IsEnabled" Value="True" />
                                    </MultiDataTrigger>


                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ListBox.ItemTemplate>-->
                    </ListBox>

                    <Grid x:Name="masterListCurtain" Grid.RowSpan="2" Background="#334F4F4F"
                          Visibility="{Binding MasterListCurtainVisibility}" />
                    <ComboBox Name="masterSelector" Grid.Row="0" DisplayMemberPath="Name"
                              IsDropDownOpen="{Binding IsMasterSelectorOpen}"
                              ItemsSource="{Binding MasterSelectorList}"
                              SelectedItem="{Binding MasterSelectorSelectedItem}"
                              Style="{StaticResource ComboBoxFlatStyle}"
                              Visibility="{Binding MasterSelectorVisibility}" />
                </Grid>
            </Grid>
            <Grid x:Name="masterObject" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <StackPanel x:Name="masterObjectButtons" Grid.Row="0" Margin="0,10,0,0"
                            Background="{DynamicResource DarkBrush}"
                            FlowDirection="RightToLeft" Orientation="Horizontal"
                            Visibility="{Binding MasterObjectButtonsVisibility}">
                    <Button x:Name="masterSaveButton" HorizontalAlignment="Left"
                            Command="{Binding MasterSaveCmd}"
                            Content="Save"
                            Style="{StaticResource ButtonStyle1}" />
                    <Button x:Name="masterCancelButton" HorizontalAlignment="Right"
                            Command="{Binding MasterCancelCmd}"
                            Content="Cancel"
                            Style="{StaticResource ButtonStyle1}" />
                </StackPanel>
                <Border Name="masterObjectPanel" Grid.Row="1" Margin="0,10,0,0"
                        Background="{StaticResource VeryDarkBrush}"
                        BorderBrush="{DynamicResource PlumbumBrush}"
                        BorderThickness="1" Padding="10"
                        Visibility="{Binding MasterObjectPanelVisibility}">
                    <Border.Resources>
                        <DataTemplate DataType="{x:Type model:LightElement}">
                            <local:LE_UC IsEditMode="{Binding IsEditMode}"
                                         IsAddMode="{Binding IsAddMode}"
                                         PointType="{Binding PointType}"
                                         CSprefix="{Binding ControlSpace.Prefix}" />
                        </DataTemplate>
                    </Border.Resources>
                    <ContentControl Name="masterCurrentObject" Margin="0,5,0,0"
                                    Content="{Binding MasterCurrentObject}" />
                </Border>
                <Grid x:Name="masterObjectCurtain" Grid.Row="1" Margin="0,10,0,0"
                      Background="Transparent"
                      Visibility="{Binding MasterObjectCurtainVisibility}" />
            </Grid>
        </Grid>
        <Grid x:Name="detailLayout" Grid.Column="2"
              Visibility="{Binding DetailContentVisibility}">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid x:Name="detailList" Grid.Row="0">

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <!--Background="{StaticResource DarkBrush}"-->
                <Grid x:Name="detailListButtons" Grid.Row="0" Margin="0,0,0,10"
                      Background="{StaticResource DarkBrush}"
                      Visibility="{Binding DetailListButtonsVisibility}">
                    <Button x:Name="detailViewButton" Margin="1" HorizontalAlignment="Right"
                            Command="{Binding ViewCmd}"
                            Content="VIew"
                            Padding="3,1"
                            Style="{StaticResource ButtonStyle1}" />

                </Grid>
                <ListBox Grid.Row="1"
                         ItemContainerStyle="{StaticResource ListBoxItemStyle1}"
                         ItemTemplate="{StaticResource DetailTemplate}"
                         ItemsSource="{Binding DetailList}"
                         SelectedItem="{Binding DetailSelectedItem}"
                         Style="{StaticResource ListBoxStyle1}">
                    <!--<i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDoubleClick">
                            <Custom:EventToCommand Command="{Binding DetailEditCmd}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>-->
                    <!--<ListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>-->
                </ListBox>
                <Grid x:Name="detailListCurtain" Grid.Row="1" Background="#334F4F4F"
                      Visibility="{Binding DetailListCurtainVisibility}" />
            </Grid>
            <Grid x:Name="detailObject" Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <!--<StackPanel x:Name="detailObjectButtons" Grid.Row="0" Margin="0,10,0,0"
                            Background="{DynamicResource DarkBrush}"
                            FlowDirection="RightToLeft" Orientation="Horizontal"
                            Visibility="{Binding DetailObjectButtonsVisibility}">
                    <Button x:Name="detailSaveButton" HorizontalAlignment="Left"
                            Command="{Binding DetailSaveCmd}"
                            Content="Save"
                            Style="{StaticResource ButtonStyle1}" />
                    <Button x:Name="detailCancelButton" HorizontalAlignment="Right"
                            Command="{Binding DetailCancelCmd}"
                            Content="Cancel"
                            Style="{StaticResource ButtonStyle1}" />
                </StackPanel>-->
                <Border Name="detailObjectPanel" Grid.Row="1" Margin="0,10,0,0"
                        Background="{StaticResource VeryDarkBrush}"
                        BorderBrush="{DynamicResource PlumbumBrush}"
                        BorderThickness="1" Padding="10"
                        Visibility="{Binding DetailObjectPanelVisibility}">
                    <Border.Resources>
                        <DataTemplate DataType="{x:Type model:AN6UControlChannel}">
                            <local:AN6UControlChannelUC />
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type model:NLPowerChannel}">
                            <local:NLControlChannelUC />
                        </DataTemplate>
                    </Border.Resources>
                    <ContentControl Name="detailCurrentObject" Margin="0,5,0,0"
                                    Content="{Binding DetailCurrentObject}" />
                </Border>
                <Grid x:Name="detailObjectCurtain" Grid.Row="1" Margin="0,10,0,0"
                      Background="Transparent"
                      Visibility="{Binding DetailObjectCurtainVisibility}" />
            </Grid>
        </Grid>

    </Grid>
</UserControl>
