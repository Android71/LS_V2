<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--  App Colors And Brushes  -->

    <Color x:Key="VeryDark">#FF1A1A1A</Color>
    <Color x:Key="Dark">#FF404040</Color>
    <Color x:Key="Plumbum">#FF595959</Color>
    <Color x:Key="DimGray">DimGray</Color>
    <Color x:Key="Gray">Gray</Color>
    <Color x:Key="LightGray">#FF999999</Color>
    <Color x:Key="Silver">#FFB2B2B2</Color>
    <Color x:Key="DimWhite">#FFCCCCCC</Color>
    <Color x:Key="Gainsboro">#FFE5E5E5</Color>
    <Color x:Key="White">#FFFFFFFF</Color>

    <Color x:Key="BlueAccent">#FF007ACC</Color>

    <SolidColorBrush x:Key="BlackBrush" Color="Black" />
    <SolidColorBrush x:Key="VeryDarkBrush" Color="{StaticResource VeryDark}" />
    <SolidColorBrush x:Key="DarkBrush" Color="{StaticResource Dark}" />
    <SolidColorBrush x:Key="PlumbumBrush" Color="{StaticResource Plumbum}" />
    <SolidColorBrush x:Key="DimGrayBrush" Color="{StaticResource DimGray}" />
    <SolidColorBrush x:Key="GrayBrush" Color="{StaticResource Gray}" />
    <SolidColorBrush x:Key="LightGrayBrush" Color="{StaticResource LightGray}" />
    <SolidColorBrush x:Key="SilverBrush" Color="{StaticResource Silver}" />
    <SolidColorBrush x:Key="DimWhiteBrush" Color="{StaticResource DimWhite}" />
    <SolidColorBrush x:Key="GainsboroBrush" Color="{StaticResource Gainsboro}" />
    <SolidColorBrush x:Key="WhiteBrush" Color="{StaticResource White}" />

    <SolidColorBrush x:Key="BlueAccentBrush" Color="{StaticResource BlueAccent}" />


    <Style x:Key="ControlPanelLabel" TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource SilverBrush}" />
        <Setter Property="Background" Value="Transparent" />
    </Style>


    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1"
                               StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TabItem Colors And Brushes  -->

    <SolidColorBrush x:Key="TabItem.Normal.Background" Color="{StaticResource DimGray}" />
    <SolidColorBrush x:Key="TabItem.Normal.Foreground" Color="Black" />
    <SolidColorBrush x:Key="TabItem.Normal.BorderBrush" Color="{StaticResource Gray}" />

    <SolidColorBrush x:Key="TabItem.Selected.Background" Color="{StaticResource Gray}" />
    <SolidColorBrush x:Key="TabItem.Selected.Foreground" Color="Black" />
    <SolidColorBrush x:Key="TabItem.Selected.BorderBrush" Color="{StaticResource DimWhite}" />

    <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="Transparent" />
    <SolidColorBrush x:Key="TabItem.Disabled.Foreground" Color="{StaticResource Gray}" />
    <SolidColorBrush x:Key="TabItem.Disabled.BorderBrush" Color="{StaticResource DimGray}" />


    <SolidColorBrush x:Key="TabItem.MouseOver.Background" Color="{StaticResource Dark}" />
    <SolidColorBrush x:Key="TabItem.MouseOver.BorderBrush" Color="{StaticResource BlueAccent}" />

    <Style x:Key="MainTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Foreground" Value="{StaticResource TabItem.Normal.Foreground}" />
        <Setter Property="Background" Value="{StaticResource TabItem.Normal.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Normal.BorderBrush}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="6,2,6,2" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot"
                          Margin="0,0,5,5"
                          SnapsToDevicePixels="true">
                        <Border x:Name="mainBorder"
                                Margin="0"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1"
                                Background="{TemplateBinding Background}" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{Binding HorizontalContentAlignment,
                                                                        RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          VerticalAlignment="{Binding VerticalContentAlignment,
                                                                      RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          ContentSource="Header"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>

                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.MouseOver.BorderBrush}" />
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.MouseOver.Background}" />

                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Disabled.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Disabled.BorderBrush}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource TabItem.Disabled.Foreground}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource TabItem.Normal.Foreground}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="-2,-2,-2,0" />
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Selected.Background}" />
                            <Setter Property="Foreground" Value="{StaticResource TabItem.Selected.Foreground}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Selected.BorderBrush}" />
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  MainTabControl  -->

    <SolidColorBrush x:Key="TabControl.Content.BorderBrush" Color="{StaticResource Dark}" />

    <Style x:Key="MainTabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="Padding" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot"
                          ClipToBounds="true"
                          SnapsToDevicePixels="true"
                          KeyboardNavigation.TabNavigation="Local"
                          Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="headerPanel"
                                  Grid.Row="0"
                                  Grid.Column="0"
                                  Margin="2,2,2,0"
                                  Panel.ZIndex="1"
                                  Background="Transparent"
                                  IsItemsHost="true"
                                  KeyboardNavigation.TabIndex="1" />
                        <Border x:Name="contentPanel"
                                Grid.Row="1"
                                Grid.Column="0"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{StaticResource TabControl.Content.BorderBrush}"
                                Background="Transparent"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Margin="{TemplateBinding Padding}"
                                              ContentSource="SelectedContent"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ListBox  -->

    <SolidColorBrush x:Key="ListBorder" Color="{StaticResource Plumbum}" />
    <SolidColorBrush x:Key="ListBackground" Color="{StaticResource VeryDark}" />
    <SolidColorBrush x:Key="ListForeground" Color="{StaticResource Silver}" />


    <Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource ListBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ListBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ListForeground}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="1"
                            SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ListBoxItem  -->

    <SolidColorBrush x:Key="ListBoxItem.MouseOverBackground" Color="{StaticResource Dark}" />

    <SolidColorBrush x:Key="ListBoxItem.Selected.Background" Color="{StaticResource Gray}" />
    <SolidColorBrush x:Key="ListBoxItem.Selected.Foreground" Color="Black" />
    <SolidColorBrush x:Key="ListBoxItem.Selected.Border" Color="{StaticResource LightGray}" />

    <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="3,1,0,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="presenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBoxItem.Selected.Background}" />
                            <Setter TargetName="presenter" Property="TextElement.Foreground" Value="{StaticResource ListBoxItem.Selected.Foreground}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListBoxItem.Selected.Border}" />
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1" />
                        </Trigger>
                        <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                        </MultiTrigger>-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBoxItem.MouseOverBackground}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TextBoxInList  -->

    <SolidColorBrush x:Key="TextBoxInList.Edit.Background" Color="{StaticResource Gray}" />

    <Style x:Key="TextBoxInList" TargetType="{x:Type TextBox}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="Border"
                                Background="Gray"
                                BorderBrush="Green"
                                BorderThickness="1"
                                Padding="2"
                                CornerRadius="2">

                            <!--  The implementation places the Content into the ScrollViewer. It must be named PART_ContentHost for the control to function  -->
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Margin="0"
                                          Style="{DynamicResource SimpleScrollViewer}"
                                          Background="{TemplateBinding Background}" />

                        </Border>
                        <Border Background="Transparent" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>