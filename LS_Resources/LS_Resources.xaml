<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    >
                    <!--xmlns:local="clr-namespace:LS_Resources"-->

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ColorsAndBrushes.xaml" />
        <ResourceDictionary Source="Controls.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  App Colors And Brushes  -->
    <!--

    <Color x:Key="VeryDark">#FF1A1A1A</Color>
    <Color x:Key="Dark">#FF404040</Color>
    <Color x:Key="Plumbum">#FF595959</Color>
    <Color x:Key="DimGray">DimGray</Color>
    <Color x:Key="Gray">Gray</Color>
    <Color x:Key="LightGray">#FF999999</Color>
    <Color x:Key="Silver">#FFB2B2B2</Color>
    <Color x:Key="DimWhite">#FFCCCCCC</Color>
    <Color x:Key="Gainsboro">#FFE5E5E5</Color>
    <Color x:Key="White">#FFFFFFFF</Color>

    <Color x:Key="BlueAccent">#FF007ACC</Color>
    <Color x:Key="OrangeAccent">#FFBF3F00</Color>

    <SolidColorBrush x:Key="BlackBrush" Color="Black" />
    <SolidColorBrush x:Key="VeryDarkBrush" Color="{StaticResource VeryDark}" />
    <SolidColorBrush x:Key="DarkBrush" Color="{StaticResource Dark}" />
    <SolidColorBrush x:Key="PlumbumBrush" Color="{StaticResource Plumbum}" />
    <SolidColorBrush x:Key="DimGrayBrush" Color="{StaticResource DimGray}" />
    <SolidColorBrush x:Key="GrayBrush" Color="{StaticResource Gray}" />
    <SolidColorBrush x:Key="LightGrayBrush" Color="{StaticResource LightGray}" />
    <SolidColorBrush x:Key="SilverBrush" Color="{StaticResource Silver}" />
    <SolidColorBrush x:Key="DimWhiteBrush" Color="{StaticResource DimWhite}" />
    <SolidColorBrush x:Key="GainsboroBrush" Color="{StaticResource Gainsboro}" />
    <SolidColorBrush x:Key="WhiteBrush" Color="{StaticResource White}" />

    <SolidColorBrush x:Key="BlueAccentBrush" Color="{StaticResource BlueAccent}" />
    <SolidColorBrush x:Key="OrangeAccentBrush" Color="{StaticResource OrangeAccent}" />


    <Style x:Key="ControlPanelLabel" TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource SilverBrush}" />
        <Setter Property="Background" Value="Transparent" />
    </Style>


    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeDashArray="1 2"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    -->
    <!--  TabItem Colors And Brushes  -->
    <!--

    <SolidColorBrush x:Key="TabItem.Normal.Background" Color="{StaticResource DimGray}" />
    <SolidColorBrush x:Key="TabItem.Normal.Foreground" Color="Black" />
    <SolidColorBrush x:Key="TabItem.Normal.BorderBrush" Color="{StaticResource Gray}" />

    <SolidColorBrush x:Key="TabItem.Selected.Background" Color="{StaticResource Gray}" />
    <SolidColorBrush x:Key="TabItem.Selected.Foreground" Color="Black" />
    <SolidColorBrush x:Key="TabItem.Selected.BorderBrush" Color="{StaticResource DimWhite}" />

    <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="Transparent" />
    <SolidColorBrush x:Key="TabItem.Disabled.Foreground" Color="{StaticResource Gray}" />
    <SolidColorBrush x:Key="TabItem.Disabled.BorderBrush" Color="{StaticResource DimGray}" />


    <SolidColorBrush x:Key="TabItem.MouseOver.Background" Color="{StaticResource Dark}" />
    <SolidColorBrush x:Key="TabItem.MouseOver.BorderBrush" Color="{StaticResource BlueAccent}" />

    <Style x:Key="MainTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Foreground" Value="{StaticResource TabItem.Normal.Foreground}" />
        <Setter Property="Background" Value="{StaticResource TabItem.Normal.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Normal.BorderBrush}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="6,2,6,2" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="IsEnabled" Value="{Binding TabItemEnabled}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="templateRoot"
                          Margin="0,0,5,5"
                          SnapsToDevicePixels="true">
                        <Border x:Name="mainBorder"
                                Margin="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1" />
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{Binding HorizontalContentAlignment,
                                                                        RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          VerticalAlignment="{Binding VerticalContentAlignment,
                                                                      RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          ContentSource="Header"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>

                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.MouseOver.BorderBrush}" />
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.MouseOver.Background}" />

                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Disabled.Background}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Disabled.BorderBrush}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource TabItem.Disabled.Foreground}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource TabItem.Normal.Foreground}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="-2,-2,-2,0" />
                            <Setter TargetName="mainBorder" Property="Background" Value="{StaticResource TabItem.Selected.Background}" />
                            <Setter Property="Foreground" Value="{StaticResource TabItem.Selected.Foreground}" />
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{StaticResource TabItem.Selected.BorderBrush}" />
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    -->
    <!--  MainTabControl  -->
    <!--

    <SolidColorBrush x:Key="TabControl.Content.BorderBrush" Color="{StaticResource Dark}" />

    <Style x:Key="MainTabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="Padding" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot"
                          Background="Transparent"
                          ClipToBounds="true"
                          KeyboardNavigation.TabNavigation="Local"
                          SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                            <RowDefinition x:Name="RowDefinition1" Height="*" />
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="headerPanel"
                                  Grid.Row="0"
                                  Grid.Column="0"
                                  Margin="2,2,2,0"
                                  Panel.ZIndex="1"
                                  Background="Transparent"
                                  IsItemsHost="true"
                                  KeyboardNavigation.TabIndex="1" />
                        <Border x:Name="contentPanel"
                                Grid.Row="1"
                                Grid.Column="0"
                                Background="Transparent"
                                BorderBrush="{StaticResource TabControl.Content.BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              Margin="{TemplateBinding Padding}"
                                              ContentSource="SelectedContent"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    -->
    <!--  ListBox  -->
    <!--

    <SolidColorBrush x:Key="ListBorder" Color="{StaticResource Plumbum}" />
    <SolidColorBrush x:Key="ListBackground" Color="{StaticResource VeryDark}" />
    <SolidColorBrush x:Key="ListForeground" Color="{StaticResource Silver}" />


    <Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{StaticResource ListBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ListBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource ListForeground}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="1"
                            SnapsToDevicePixels="true">
                        <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    -->
    <!--  ListBoxItem  -->
    <!--

    <SolidColorBrush x:Key="ListBoxItem.MouseOverBackground" Color="{StaticResource Dark}" />

    <SolidColorBrush x:Key="ListBoxItem.Selected.Background" Color="{StaticResource Gray}" />
    <SolidColorBrush x:Key="ListBoxItem.Selected.Foreground" Color="Black" />
    <SolidColorBrush x:Key="ListBoxItem.Selected.Border" Color="{StaticResource LightGray}" />

    <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="3,1,0,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="presenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBoxItem.Selected.Background}" />
                            <Setter TargetName="presenter" Property="TextElement.Foreground" Value="{StaticResource ListBoxItem.Selected.Foreground}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource ListBoxItem.Selected.Border}" />
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1" />
                        </Trigger>
    -->
    <!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                        </MultiTrigger>-->
    <!--
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="false" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource ListBoxItem.MouseOverBackground}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    -->
    <!--  TextBoxInList  -->
    <!--

    <SolidColorBrush x:Key="TextBoxInList.Edit.Background" Color="{StaticResource Gray}" />

    <Style x:Key="TextBoxInList" TargetType="{x:Type TextBox}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="Border"
                                Background="Gray"
                                BorderBrush="Green"
                                BorderThickness="1"
                                CornerRadius="2"
                                Padding="2">

    -->
    <!--  The implementation places the Content into the ScrollViewer. It must be named PART_ContentHost for the control to function  -->
    <!--
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Margin="0"
                                          Background="{TemplateBinding Background}"
                                          Style="{DynamicResource SimpleScrollViewer}" />

                        </Border>
                        <Border Background="Transparent" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    -->
    <!--  Button1  -->
    <!--

    <SolidColorBrush x:Key="Button1.Static.Background" Color="{StaticResource DimGray}" />
    <SolidColorBrush x:Key="Button1.Static.Border" Color="{StaticResource DimGray}" />

    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="{StaticResource Dark}" />
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="{StaticResource BlueAccent}" />

    <SolidColorBrush x:Key="Button.Pressed.Background" Color="{StaticResource Gray}" />
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="{StaticResource BlueAccent}" />

    <SolidColorBrush x:Key="Button.Disabled.Background" Color="Transparent" />
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="{StaticResource Plumbum}" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="{StaticResource DimGray}" />
    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="{StaticResource Button1.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource Button1.Static.Border}" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="3,1"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Focusable="False"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.MouseOver.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.MouseOver.Border}" />
                            <Setter TargetName="border" Property="BorderThickness" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Pressed.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Pressed.Border}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource Button.Disabled.Background}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource Button.Disabled.Border}" />
                            <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{StaticResource Button.Disabled.Foreground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    -->
    <!--  TextBox1  -->
    <!--

    <SolidColorBrush x:Key="TextBox1.Static.Background" Color="{StaticResource Dark}" />
    <SolidColorBrush x:Key="TextBox1.Static.Border" Color="{StaticResource Plumbum}" />

    <SolidColorBrush x:Key="TextBox1.MouseOver.Border" Color="{StaticResource BlueAccent}" />

    <SolidColorBrush x:Key="TextBox1.Focused.Background" Color="{StaticResource Gray}" />
    <SolidColorBrush x:Key="TextBox1.Focused.Border" Color="{StaticResource DimWhite}" />

    <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border x:Name="Border"
                                Background="{StaticResource TextBox1.Static.Background}"
                                BorderBrush="{StaticResource TextBox1.Static.Border}"
                                BorderThickness="1"
                                CornerRadius="0"
                                Padding="2">

    -->
    <!--  The implementation places the Content into the ScrollViewer. It must be named PART_ContentHost for the control to function  -->
    <!--
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Margin="0"
                                          Background="{StaticResource TextBox1.Static.Background}"
                                          Style="{DynamicResource SimpleScrollViewer}" />

                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="IsReadOnly" Value="false" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TextBox1.MouseOver.Border}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
    -->
    <!--<Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TextBox1.MouseOver.Border}" />
                        </Trigger>-->
    <!--
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource TextBox1.Focused.Border}" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource TextBox1.Focused.Background}" />
                            <Setter TargetName="PART_ContentHost" Property="Background" Value="{StaticResource TextBox1.Focused.Background}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    -->
    <!--  Flat ScrollViewer  -->
    <!--

    <ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="ScrollViewer">
        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Margin="{TemplateBinding Padding}"
                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                    CanHorizontallyScroll="False"
                                    CanVerticallyScroll="False"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}" />
            <ScrollBar x:Name="PART_VerticalScrollBar"
                       Grid.Row="0"
                       Grid.Column="1"
                       AutomationProperties.AutomationId="VerticalScrollBar"
                       Cursor="Arrow"
                       Maximum="{TemplateBinding ScrollableHeight}"
                       Minimum="0"
                       Style="{DynamicResource ScrollBarStyle}"
                       ViewportSize="{TemplateBinding ViewportHeight}"
                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                       Value="{Binding VerticalOffset,
                                       Mode=OneWay,
                                       RelativeSource={RelativeSource TemplatedParent}}" />
            <ScrollBar x:Name="PART_HorizontalScrollBar"
                       Grid.Row="1"
                       Grid.Column="0"
                       AutomationProperties.AutomationId="HorizontalScrollBar"
                       Cursor="Arrow"
                       Maximum="{TemplateBinding ScrollableWidth}"
                       Minimum="0"
                       Orientation="Horizontal"
                       Style="{DynamicResource ScrollBarStyle}"
                       ViewportSize="{TemplateBinding ViewportWidth}"
                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                       Value="{Binding HorizontalOffset,
                                       Mode=OneWay,
                                       RelativeSource={RelativeSource TemplatedParent}}" />
            <Rectangle x:Name="Corner"
                       Grid.Row="1"
                       Grid.Column="1"
                       Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        </Grid>
    </ControlTemplate>
    -->
    <!--<SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#F0F0F0"/>-->
    <!--
    <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="{StaticResource DimGray}" />
    -->
    <!--<SolidColorBrush x:Key="ScrollBar.Static.Border" Color="#F0F0F0"/>-->
    <!--
    <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="{StaticResource DimGray}" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#FFFFFF" />
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="#000000" />
    <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="#BFBFBF" />
    -->
    <!--<SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#606060"/>-->
    <!--
    <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="{StaticResource VeryDark}" />
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="#DADADA" />
    <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="#DADADA" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#606060" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#606060" />
    <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#F0F0F0" />
    <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#F0F0F0" />

    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="border"
                            Background="{StaticResource ScrollBar.Static.Background}"
                            BorderBrush="{StaticResource ScrollBar.Static.Border}"
                            BorderThickness="1"
                            SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Focusable="False"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
    -->
    <!--<Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.MouseOver.Border}"/>-->
    <!--
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
    -->
    <!--<Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Border}"/>-->
    <!--
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
    -->
    <!--<Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Border}"/>-->
    <!--
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"
                               Fill="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="#A6A6A6" />
    <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="#606060" />
    <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="#CDCDCD" />

    <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Margin" Value="5,0,5,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="rectangle"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"
                               Fill="{StaticResource ScrollBar.Static.Thumb}"
                               SnapsToDevicePixels="True" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Thumb}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Margin" Value="0,5,0,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle x:Name="rectangle"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"
                               Fill="{StaticResource ScrollBar.Static.Thumb}"
                               SnapsToDevicePixels="True" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Thumb}" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter TargetName="rectangle" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Thumb}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1,0" />
        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                        </Grid.RowDefinitions>
    -->
    <!--  Height="66" VerticalAlignment="Bottom"  -->
    <!--
                        <RepeatButton x:Name="PART_LineUpButton"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Style="{StaticResource ScrollBarButton}">
                            <Path x:Name="ArrowTop"
                                  Width="7"
                                  Height="5.5"
                                  Margin="0"
                                  Data="M0,6 C0,6 7,6 7,6 7,6 3.5,0.5 3.5,0.5 3.5,0.5 0,6 0,6 z"
                                  Fill="{StaticResource ScrollBar.Static.Glyph}"
                                  Stretch="Uniform" />
                        </RepeatButton>
                        <Border Grid.Row="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <Track x:Name="PART_Track"
                               Grid.Row="1"
                               IsDirectionReversed="true"
                               IsEnabled="{TemplateBinding IsMouseOver}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumbVertical}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton x:Name="PART_LineDownButton"
                                      Grid.Row="2"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Style="{StaticResource ScrollBarButton}">
                            <Path x:Name="ArrowBottom"
                                  Width="7"
                                  Height="5.5"
                                  Margin="0"
                                  Data="M0,0.5 C0,0.5 7,0.5 7,0.5 7,0.5 3.5,6 3.5,6 3.5,6 0,0.5 0,0.5 z"
                                  Fill="{StaticResource ScrollBar.Static.Glyph}"
                                  Stretch="Uniform" />
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowBottom" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowTop" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowBottom" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="ArrowTop" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ArrowTop" Property="Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                            <Setter TargetName="ArrowBottom" Property="Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding ElementName=PART_LineUpButton, Path=IsMouseOver}" Value="True">
                            <Setter TargetName="ArrowTop" Property="Fill" Value="{StaticResource BlueAccentBrush}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="BorderThickness" Value="0,1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    <ColumnDefinition Width="0.00001*" />
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                </Grid.ColumnDefinitions>
                                <RepeatButton x:Name="PART_LineLeftButton"
                                              Command="{x:Static ScrollBar.LineLeftCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{StaticResource ScrollBarButton}">
                                    <Path x:Name="ArrowLeft"
                                          Width="5"
                                          Height="7"
                                          Data="M5,7 C5,7 5,0 5,0 5,0 0,3.5 0,3.5 0,3.5 5,7 5,7 z"
                                          Fill="{StaticResource ScrollBar.Static.Glyph}"
                                          Stretch="Uniform" />
    -->
    <!--<Path x:Name="ArrowLeft" Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>-->
    <!--
                                </RepeatButton>
                                <Border Grid.Column="1"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}" />
                                <Track x:Name="PART_Track"
                                       Grid.Column="1"
                                       IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton x:Name="PART_LineRightButton"
                                              Grid.Column="2"
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Style="{StaticResource ScrollBarButton}">
    -->
    <!--<Path x:Name="ArrowRight" Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z" Fill="{StaticResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform"/>-->
    <!--
                                    <Path x:Name="ArrowRight"
                                          Width="5"
                                          Height="7"
                                          Data="M0,7 C0,7 0,0 0,0 0,0 5,3.5 5,3.5 5,3.5 0,7 0,7 z"
                                          Fill="{StaticResource ScrollBar.Static.Glyph}"
                                          Stretch="Uniform" />
                                </RepeatButton>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowRight" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowLeft" Property="Fill" Value="{StaticResource ScrollBar.Pressed.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowRight" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="ArrowLeft" Property="Fill" Value="{StaticResource ScrollBar.MouseOver.Glyph}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="ArrowLeft" Property="Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                    <Setter TargetName="ArrowRight" Property="Fill" Value="{StaticResource ScrollBar.Disabled.Glyph}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="ScrollViewer">
        <Setter Property="Template" Value="{DynamicResource ScrollViewerControlTemplate}" />
    </Style>

    -->
    <!--  End of Flat ScrollViewer  -->


    <!--  Flat ComboBox  -->
    <!--  https://gist.github.com/hansmaad/9187633#file-gistfile1-xml  -->
    <!--

    <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="{StaticResource LightGray}" />
    <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="{StaticResource Dark}" />

    <SolidColorBrush x:Key="ComboBox.MouseOverBrush" Color="{StaticResource BlueAccent}" />

    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

    <Style x:Key="comboItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="border"
                            Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="1"
                            Padding="0,2">
                        <ContentPresenter Margin="4,0,0,0"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource PlumbumBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOverBrush}" />
                            <Setter Property="Foreground" Value="LightGray" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="false">
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border Name="Border"
                    Grid.ColumnSpan="2"
                    Background="{DynamicResource ComboBoxNormalBackgroundBrush}"
                    BorderBrush="{DynamicResource ComboBoxNormalBorderBrush}"
                    BorderThickness="1, 1, 1, 1"
                    CornerRadius="0" />
            <Border Name="ButtonBorder"
                    Grid.Column="1"
                    Margin="1, 1, 1, 1"
                    Background="{DynamicResource ComboBoxNormalBackgroundBrush}"
                    BorderBrush="{DynamicResource ComboBoxNormalBorderBrush}"
                    BorderThickness="0, 0, 0, 0"
                    CornerRadius="0, 0, 0, 0" />
            <Path x:Name="Arrow"
                  Grid.Column="1"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z"
                  Fill="{DynamicResource ComboBoxNormalBorderBrush}" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="false" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOverBrush}" />
                    <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ComboBox.MouseOverBrush}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
    -->
    <!--<Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter TargetName="ButtonBorder" Property="Panel.Background" Value="WhiteSmoke" />
                </Trigger>-->
    <!--<Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter TargetName="ButtonBorder" Property="Panel.Background" Value="WhiteSmoke" />
                    <Setter TargetName="Arrow" Property="Shape.Fill" Value="#FF8D979E" />
                </Trigger>-->
    <!--
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Panel.Background" Value="{StaticResource ComboBoxDisabledBackgroundBrush}" />
                <Setter TargetName="ButtonBorder" Property="Panel.Background" Value="{StaticResource ComboBoxDisabledBackgroundBrush}" />
                <Setter TargetName="ButtonBorder" Property="Border.BorderBrush" Value="{StaticResource ComboBoxDisabledBorderBrush}" />
                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}" />
                <Setter TargetName="Arrow" Property="Shape.Fill" Value="#999" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxFlatStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource comboItemStyle}" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="TextElement.Foreground" Value="{StaticResource LightGrayBrush}" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>

                        <ContentPresenter Name="ContentSite"
                                          Margin="5, 3, 23, 3"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          IsHitTestVisible="False" />
                        <TextBox Name="PART_EditableTextBox"
                                 Margin="3, 3, 23, 3"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Background="Transparent"
                                 Focusable="True"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Visibility="Hidden">
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox">
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
    -->
    <!--  Popup showing items  -->
    <!--
                        <Popup Name="Popup"
                               AllowsTransparency="True"
                               Focusable="False"
                               IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                               Placement="Bottom"
                               PopupAnimation="Slide"
                               VerticalOffset="5">
                            <Grid Name="DropDown"
                                  MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                  SnapsToDevicePixels="True">
                                <Border Name="DropDownBorder"
                                        Margin="0"
                                        Background="{DynamicResource DimGrayBrush}"
                                        BorderBrush="{DynamicResource GrayBrush}"
                                        BorderThickness="1,1,1,1"
                                        CornerRadius="0" />
                                <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                        <ToggleButton Name="ToggleButton"
                                      Grid.Column="2"
                                      ClickMode="Press"
                                      Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen,
                                                          RelativeSource={RelativeSource TemplatedParent},
                                                          Mode=TwoWay}"
                                      Template="{StaticResource ComboBoxToggleButtonTemplate}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                            <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible" />
                            <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    -->
    <!--  End of Flat ComboBox  -->


</ResourceDictionary>